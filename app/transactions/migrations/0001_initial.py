# Generated by Django 5.0.1 on 2024-02-02 17:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CurrencyRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('usd', models.FloatField()),
                ('eur', models.FloatField()),
                ('gbp', models.FloatField()),
                ('chf', models.FloatField()),
                ('rub', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Currency rate',
                'verbose_name_plural': 'Currency rates',
            },
        ),
        migrations.CreateModel(
            name='ImportFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Import file',
                'verbose_name_plural': 'Import files',
            },
        ),
        migrations.CreateModel(
            name='TaxSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(unique=True)),
                ('revenue', models.FloatField()),
                ('cost', models.FloatField()),
                ('tax', models.FloatField()),
            ],
            options={
                'verbose_name': 'Tax summary',
                'verbose_name_plural': 'Tax summary',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_name', models.CharField(max_length=124)),
                ('asset_type', models.CharField(choices=[('Stocks', 'Stocks'), ('Bonds', 'Bonds'), ('Equity and Index Options', 'Options'), ('ETFs', 'ETFs'), ('Forex', 'Forex'), ('Dividend', 'Dividend')], max_length=124)),
                ('side', models.CharField(choices=[('Buy', 'Buy'), ('Sell', 'Sell')], max_length=8)),
                ('price', models.FloatField()),
                ('quantity', models.FloatField()),
                ('value', models.FloatField()),
                ('value_pln', models.FloatField()),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('PLN', 'PLN'), ('EUR', 'EUR'), ('RUB', 'RUB')], max_length=3)),
                ('fee', models.FloatField()),
                ('option_type', models.CharField(blank=True, choices=[('CALL', 'CALL'), ('PUT', 'PUT')], max_length=4)),
                ('strike_price', models.FloatField(blank=True, null=True)),
                ('executed_at', models.DateTimeField()),
                ('previous_day_currency_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='transactions', to='transactions.currencyrate')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'unique_together': {('asset_name', 'side', 'price', 'quantity', 'executed_at')},
            },
        ),
        migrations.CreateModel(
            name='TaxCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revenue', models.FloatField()),
                ('cost', models.FloatField()),
                ('profit_or_loss', models.FloatField()),
                ('tax', models.FloatField()),
                ('tax_rate', models.FloatField(default=0.19)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('tax_summary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax_calculations', to='transactions.taxsummary')),
                ('closing_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='as_closing_calculation', to='transactions.transaction')),
                ('opening_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='as_opening_calculation', to='transactions.transaction')),
            ],
            options={
                'verbose_name': 'Tax calculation',
                'verbose_name_plural': 'Tax calculations',
            },
        ),
        migrations.CreateModel(
            name='WithholdingTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_name', models.CharField(max_length=124)),
                ('value', models.FloatField()),
                ('value_pln', models.FloatField()),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('PLN', 'PLN'), ('EUR', 'EUR'), ('RUB', 'RUB')], max_length=3)),
                ('paid_at', models.DateField()),
                ('previous_day_currency_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='withholding_taxes', to='transactions.currencyrate')),
            ],
            options={
                'verbose_name': 'Withholding Tax',
                'verbose_name_plural': 'Withholding Taxes',
            },
        ),
        migrations.CreateModel(
            name='Dividend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_name', models.CharField(max_length=124)),
                ('value_per_share', models.FloatField(blank=True, null=True)),
                ('value', models.FloatField()),
                ('value_pln', models.FloatField()),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('PLN', 'PLN'), ('EUR', 'EUR'), ('RUB', 'RUB')], max_length=3)),
                ('received_at', models.DateField()),
                ('previous_day_currency_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='dividends', to='transactions.currencyrate')),
                ('withholding_tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dividends', to='transactions.withholdingtax')),
            ],
            options={
                'verbose_name': 'Dividend',
                'verbose_name_plural': 'Dividends',
            },
        ),
    ]
