version: '3.8'

services:
  api:
    container_name: api
    build: .
    # restart: always
    env_file: .env
    command: sh entrypoint.sh
    depends_on:
      - db
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app

  db:
    container_name: db
    image: postgres:14.1-alpine
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data_taxer:/var/lib/postgresql/data/

  redis:
    container_name: redis
    image: "redis:alpine"

  # celery-worker:
  #   container_name: celery-worker
  #   build: ./backend
  #   command: sh -c "cd ./backend/blogs_manager && 
  #                   celery -A blogs_manager worker -l info"
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - db
  #     - redis
      
  # celery-beat:
  #   container_name: celery-beat
  #   build: ./backend
  #   command: sh -c "cd ./backend/blogs_manager && 
  #                   rm -rf celerybeat.pid &&
  #                   celery -A blogs_manager beat -l info"
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - db
  #     - redis

# NOTE test this celery services!
  celery-worker:
    container_name: celery-worker
    build: .
    command: celery -A core worker -l info
    volumes:
      - ./app:/app
    environment:
      - DEBUG=1
      # - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      # - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis

  celery-beat:
    container_name: celery-beat
    build: .
    command: celery -A core beat -l info
    volumes:
      - ./app:/app
    environment:
      - DEBUG=1
      # - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      # - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis

volumes:
  pg_data_taxer: